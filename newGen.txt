void _gen(int minX, int minZ, int maxX, int maxZ, int xMid, int zMid)
{
	if ((xMid + zMid) == 0) //ensuring generation
	{
		_heightmap[minX][minZ] = 1;
		_heightmap[maxX][minZ] = 1;
		_heightmap[minX][maxZ] = 1;
		_heightmap[maxX][maxZ] = 1;
	}

    int x = maxX - minX;
    int z = maxZ - minZ;

	if (x <= 1 && z <= 1)
	    return;

    
	int halfX = (x % 2 ? x+1 : x) / 2;
	int halfZ = (z % 2 ? z+1 : z) / 2;


	int ptX = minX + halfX;
	int ptZ = minZ + halfZ;
	
	if (x == z) //diamond step
	{
	    _heightmap[ptX][ptZ] = 1;
		
		if (x % 2)
		{
			_heightmap[ptX - 1][ptZ]     = 1;
			_heightmap[ptX]    [ptZ - 1] = 1;
			_heightmap[ptX - 1][ptZ - 1] = 1;
            
			_gen(minX, ptZ , maxX, maxZ, ptX    , ptZ);
			_gen(minX, minZ, maxX, ptZ - 1, ptX - 1, ptZ - 1);
			_gen(minX, minZ, ptX - 1, maxZ, ptX - 1, ptZ);
			_gen(ptX, minZ, maxX, maxZ, ptX    , ptZ - 1);
		}
		else
		{
			_gen(minX, ptZ , maxX, maxZ, ptX, ptZ);
			_gen(minX, minZ, maxX, ptZ , ptX, ptZ);
			_gen(minX, minZ, ptX , maxZ, ptX, ptZ);
			_gen(ptX, minZ, maxX, maxZ, ptX, ptZ);
		}

	} //square algorithms
	else if (x > z)
	{
	    if (zMid == minZ)
	    {
    		_heightmap[ptX][maxZ] = 1;
    		if (x % 2)
    		{
    			_heightmap[ptX - 1][maxZ] = 1;
    			
    			if ( (ptX != maxX) && (ptZ != maxZ))
    			{
        			_gen(minX, minZ, ptX - 1, maxZ, ptX - 1, maxZ);
        			_gen(ptX , minZ, maxX, maxZ, ptX, maxZ);
    			}
    		}
    		else
    		{
    			if ( (ptX != maxX) && (ptZ != maxZ))
    			{
        			_gen(minX, minZ, ptX, maxZ, ptX, maxZ);
        			_gen(ptX , minZ, maxX, maxZ, ptX, maxZ);
    			}
    		}
	    }
	    else
	    {
	        _heightmap[ptX][minZ] = 1;
    		if (x % 2)
    		{
    			_heightmap[ptX - 1][minZ] = 1;
    			
    			if ( (ptX != maxX) && (ptZ != maxZ))
    			{
        			_gen(minX, minZ, ptX - 1, maxZ, ptX - 1, minZ);
        			_gen(ptX , minZ, maxX, maxZ, ptX, minZ);
    			}
    		}
    		else
    		{
    			if ( (ptX != maxX) && (ptZ != maxZ))
    			{
        			_gen(minX, minZ, ptX, maxX, ptX, minZ);
        			_gen(ptX , minZ, maxX, maxX, ptX, minZ);
    			}
    		}
		}
	}
	else
	{
	    if (xMid == minX)
	    {
		    _heightmap[maxX][ptZ] = 1;
			if (z % 2)
			{
				_heightmap[maxX][ptZ - 1] = 1;
				
    			if ( (ptX != maxX) && (ptZ != maxZ))
    			{
    				_gen(minX, minZ, maxX, ptZ - 1, maxX, ptZ - 1);
    				_gen(minX, ptZ, maxX, maxZ, maxX, ptZ);
    			}   
			}
			else
			{
    			if ( (ptX != maxX) && (ptZ != maxZ))
    			{
    				_gen(minX, minZ, maxX, ptZ, maxX, ptZ);
    				_gen(minX, ptZ, maxX, maxZ, maxX, ptZ);
    			}
			}
	    }
	    else
	    {
	        _heightmap[minX][ptZ] = 1;
			if (z % 2)
			{
				_heightmap[minX][ptZ - 1] = 1;
				
    			if ( (ptX != minX) && (ptZ != minZ))
    			{
    				_gen(minX, minZ, maxX, ptZ - 1, minX, ptZ - 1);
    				_gen(minX, ptZ, maxX, maxZ, minX, ptZ);
    			}   
			}
			else
			{
    			if ( (ptX != minX) && (ptZ != minZ))
    			{
    				_gen(minX, minZ, maxX, ptZ, minX, ptZ);
    				_gen(minX, ptZ, maxX, maxZ, minX, ptZ);
    			}
			}
	    }
	}
}
